Процедура РасчетПолейЗависяшихОтФормул(Объект) Экспорт 
	
	Формула_ДействуетДо(Объект);
	Формула_Скоринг(Объект);
	Формула_SWРейтинг(Объект);
	Формула_RCT(Объект);
	Формула_МаксСрокЛизинга(Объект);
	Формула_ПроцентнаяСтавка(Объект);
	Формула_Маржа(Объект);
	Формула_АгентскаяКомиссия(Объект);
	Формула_ТипПлатежа(Объект);
	Формула_РазмерСубсидии(Объект);
	Формула_ВыкупнаяСтоимость(Объект);
	Формула_НаименованиеАгента(Объект);
	Формула_РешениеДейструетДо(Объект);
	Формула_СрокСущКомпании(Объект);
	Формула_ЦенаПЛ(Объект);
	Формула_ЕжемесячныйПлатеж(Объект);
	Формула_СуммаКредитныхПолномочий(Объект);
	Формула_ИтогНеиспользованногоЛимита(Объект);
	Формула_ИтогОстаткаОсновногоДолга(Объект);
	Формула_ИтогЛимитРиска(Объект);
	Формула_МинАванс(Объект);
	Формула_СуммаФинансирования(Объект);
	Формула_РасшифровкаКредитныхПолномочий(Объект);
	Формула_Решение(Объект);
	ЗаполнитьТрекерыПоПредметамЛизинга(Объект);
	
КонецПроцедуры

Функция ИтоговаяСуммаЛимита(Объект, ТЧ)
	
	Валюта_USD = Справочники.Валюты.USD;
	Валюта_EUR = Справочники.Валюты.EUR ;
	Валюта_RUB = Справочники.Валюты.RUB;
	
	Сумма = 0;
	Для Каждого Строка Из ТЧ Цикл
		
		Если Строка.Валюта = Валюта_EUR Тогда
			Курс = Объект.КурсEUR_RUB;
		ИначеЕсли Строка.Валюта = Валюта_USD Тогда 
			Курс = Объект.КурсUSD_RUB;
		Иначе	
			Курс = 1;
		КонецЕсли;
		
		Сумма = Сумма + Строка.Сумма * Курс;
		
	КонецЦикла;
	
	Возврат Сумма;
	
КонецФункции	

Функция ЗначениеИзМакетаПоКоду(Макет, Знач КодВКолонке, Список, НомерКолонки, ЗаполнитьСписок = Ложь, КодВПредставлении = Истина) Экспорт 
	
	Если ЗаполнитьСписок Тогда 
		Список.Очистить();
	КонецЕсли;
	
	Значение = "";
	Для Сч = 2 По Макет.ВысотаТаблицы Цикл
		Область = Макет.Область(Сч, 1);
		ТекущийКод = Область.Текст;
		
		Если ЗаполнитьСписок Тогда
			Область = Макет.Область(Сч, НомерКолонки);
			Список.Добавить(ТекущийКод, ?(КодВПредставлении, ТекущийКод + ", ", "") + Область.Текст);
		КонецЕсли;	
		
		Если ТекущийКод = КодВКолонке Тогда
			ОбластьТекст = Макет.Область(Сч, НомерКолонки);
			
			Значение = ОбластьТекст.Текст;		
			Если Не ЗаполнитьСписок Тогда
				Возврат Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

Функция ПолучитьСдвиги_Экспресс(Объект, СтрокаПЛ)

	Возврат Новый Структура("СдвигПоСтрокам, СдвигПоСтолбцам", ПолучитьСдвигПоСтрокам_Экспресс(Объект, СтрокаПЛ), ПолучитьСдвигПоСтолбцам(Объект));
	
КонецФункции 

Функция ПолучитьСдвиги_Стандарт(Объект, СтрокаПЛ)
		
	СдвигПоручительство = 0;
	Если Объект.ПоручителиФЛ.Итог("ДоляВУК") >= 50 Тогда
		СдвигПоручительство = 1;
	Иначе	
		СдвигПоручительство = 2;
	КонецЕсли;
	
	СдвигСкоринг = 0;
	Если Объект.Скоринг > 7 Тогда
		СдвигСкоринг = 0;
	ИначеЕсли Объект.Скоринг >= 5 Тогда
		СдвигСкоринг = 2;
	ИначеЕсли Объект.Скоринг < 5 Тогда
		СдвигСкоринг = 4;
	КонецЕсли;
		
	Возврат Новый Структура("СдвигПоСтрокам, СдвигПоСтолбцам", 
		ПолучитьСдвигПоСтрокам_Стандарт(Объект, СтрокаПЛ) + СдвигПоручительство + СдвигСкоринг, ПолучитьСдвигПоСтолбцам(Объект));
	
КонецФункции

Функция ПолучитьСдвигПоСтрокам_Экспресс(Объект, СтрокаПЛ)
	
	ВидПЛ_CarsMinibuses 	= Справочники.блВидыПредметовЛизинга.ЛегковойАвтотранспорт;
	ВидПЛ_TruckBuses 	= Справочники.блВидыПредметовЛизинга.ГрузовойАвтотранспорт;
	ВидПЛ_SpecVehicles 	= Справочники.блВидыПредметовЛизинга.Спецтехника;
	
	СдвигПоСтрокам = 0;
	
	Если СтрокаПЛ.КатегорияАктива = ВидПЛ_CarsMinibuses Тогда 
		Если СтрокаПЛ.Цена > 4000000 Тогда 
			СдвигПоСтрокам = ?(Объект.МаксКоличествоОплаченныхПлатежей < 3, 1, 2);
 		Иначе 
			СдвигПоСтрокам = 3;
		КонецЕсли;
	ИначеЕсли СтрокаПЛ.КатегорияАктива = ВидПЛ_TruckBuses Тогда
		СдвигПоСтрокам = 4;
	ИначеЕсли СтрокаПЛ.КатегорияАктива = ВидПЛ_SpecVehicles Тогда
		СдвигПоСтрокам = 5;	
	КонецЕсли;
	
	Возврат СдвигПоСтрокам;
	
КонецФункции

Функция ПолучитьСдвигПоСтрокам_Стандарт(Объект, СтрокаПЛ)
	
	ВидПЛ_CarsMinibuses 	= Справочники.блВидыПредметовЛизинга.ЛегковойАвтотранспорт;
	ВидПЛ_TruckBuses 	= Справочники.блВидыПредметовЛизинга.ГрузовойАвтотранспорт;
	ВидПЛ_SpecVehicles 	= Справочники.блВидыПредметовЛизинга.Спецтехника;
	
	СдвигПоСтрокам = 0;
	
	Если СтрокаПЛ.КатегорияАктива = ВидПЛ_CarsMinibuses Тогда 
		Если СтрокаПЛ.Цена > 4000000 Тогда 
			СдвигПоСтрокам = ?(Объект.МаксКоличествоОплаченныхПлатежей < 3, 1, 6);
 		Иначе 
			СдвигПоСтрокам = 12;
		КонецЕсли;
	ИначеЕсли СтрокаПЛ.КатегорияАктива = ВидПЛ_TruckBuses Тогда
		СдвигПоСтрокам = 18;
	ИначеЕсли СтрокаПЛ.КатегорияАктива = ВидПЛ_SpecVehicles Тогда
		СдвигПоСтрокам = 24;	
	КонецЕсли;
	
	Возврат СдвигПоСтрокам;
	
КонецФункции	

Функция ПолучитьСдвигПоСтолбцам(Объект)
	
	СдвигПоСтолбцам = 0;
							
	Если ПоложительноеРешениеСВЗ(Объект) Тогда 
		СдвигПоСтолбцам = 1;
		Если Объект.ТребуетсяРешениеСБ И Не ПоложительноеРешениеСБ(Объект) Тогда 
			СдвигПоСтолбцам = 2;
		КонецЕсли;	
	Иначе	
		СдвигПоСтолбцам = 3;
	КонецЕсли;
	
	Возврат СдвигПоСтолбцам;
	
КонецФункции	

Функция ПоложительноеРешениеСВЗ(Объект)
	
	Возврат (Объект.РешениеСВЗ = Перечисления.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота
				Или Объект.РешениеСВЗ = Перечисления.СостояниеСдачиОтчетности.РБЛ_ОтрицательныйСВозможностьюАрбитража); 
	
КонецФункции	

Функция ПоложительноеРешениеСБ(Объект) 

	Возврат (Объект.РешениеСБ = Перечисления.СостоянияСогласованияВДокументообороте.Согласован 
				Или Объект.РешениеСБ = Перечисления.СостоянияСогласованияВДокументообороте.РБЛ_СогласованСДополнительнымиУсловиями); 
	
КонецФункции	
	
#КонецОбласти

#Область Заполнение

Процедура ЗапонитьДанныеГенДиректора(Объект) Экспорт 
		
	Если ТипЗнч(Объект.ГенДиректор) = Тип("Строка") Тогда 		
		Объект.ГенДиректорАдрес = "";
		Объект.ГенДиректорДатаРождения = "";
	Иначе		
		Если ЗначениеЗаполнено(Объект.ГенДиректор) Тогда  
			Объект.ГенДиректорДатаРождения = Объект.ГенДиректор.ДатаРождения;
			Объект.ГенДиректорАдрес = СтрокаКонтактнойИнформации(Объект.ГенДиректор.РБЛ_ФизЛицо);
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

Процедура ЗаполнитьТЧ_KRUB(Объект) Экспорт

	Объект.KRUB.Очистить();
	
	Макет = Документы.РБЛ_ЭлектронноеКредитноеРешение.ПолучитьМакет("KRUB");
	
	Массив = Новый Массив;
	Массив.Добавить(Макет.Область(1, 1).Текст);
	Массив.Добавить(Макет.Область(1, 2).Текст);
	
	Для Строка = 2 По Макет.ВысотаТаблицы Цикл
		НоваяСтрока = Объект.KRUB.Добавить();
		
		Для Колонка = 1 По 2 Цикл  
			Область = Макет.Область(Строка, Колонка);
			ТекущееЗначение = Область.Текст;
			
			НоваяСтрока[Массив[Колонка - 1]] = ТекущееЗначение;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьТЧ_Показатели(Объект) Экспорт 

	Объект.Показатели.Очистить();
	
	Макет = Документы.РБЛ_ЭлектронноеКредитноеРешение.ПолучитьМакет("Показатели");
	
	Массив = Новый Массив;
	Для Колонка = 1 По 6 Цикл  
		Массив.Добавить(Макет.Область(1, Колонка).Текст);
	КонецЦикла;
	
	Для Строка = 2 По Макет.ВысотаТаблицы Цикл
		НоваяСтрока = Объект.Показатели.Добавить();
		
		Для Колонка = 1 По 6 Цикл  
			Область = Макет.Область(Строка, Колонка);
			ТекущееЗначение = Область.Текст;
			
			НоваяСтрока[Массив[Колонка - 1]] = ТекущееЗначение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТрекерыПоПредметамЛизинга(Объект) Экспорт
	
	Объект.Трекеры.Очистить();
	Для Каждого Строка Из Объект.ПредметыЛизинга Цикл 
		
		СтрокаТрекера = Объект.Трекеры.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТрекера, Строка);
		
		Формула_КоличествоТрекеровПоВидуПредметаЛизинга(Объект, Строка, СтрокаТрекера);
		
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти

#Область Формулы

Процедура Формула_ДействуетДо(Объект) Экспорт 
	
	СегментMicro = Справочники.PLease_ТекстовыеЗначения.Micro;
	Объект.ДействуетДо = ?(Объект.Контрагент.PLease_Business_Segment = СегментMicro, "07.02.2020", "n/a");
	
КонецПроцедуры	

Процедура Формула_Скоринг(Объект) Экспорт
	
	МассивПЛ = Новый Массив;
	МассивПЛ.Добавить(Справочники.блЛизинговыеПродукты.Экспресс); //ПЛ_Экспресс
	МассивПЛ.Добавить(Справочники.блЛизинговыеПродукты.Скоринг_50); //ПЛ_Скоринг_50
	МассивПЛ.Добавить(Справочники.блЛизинговыеПродукты.Про_10_20); //ПЛ_Про_10_20
	
	Объект.Скоринг = ?(Не МассивПЛ.Найти(Объект.ЛизинговыйПродукт) = Неопределено, 
		"n/a", 
		Объект.ИтоговыйСкоринговыйБалл);

КонецПроцедуры

Процедура Формула_SWРейтинг(Объект) Экспорт 

	//СегментMicro = Справочники.PLease_ТекстовыеЗначения.Micro;
	//
	//Объект.SWРейтинг = ?(Объект.Сегментация = СегментMicro, 
	//	Перечисления.РБЛ_РейтингиSW.Значение_7Плюс, 
	//	Перечисления.РБЛ_РейтингиSW.Значение_na);
		
КонецПроцедуры

Процедура Формула_RCT(Объект) Экспорт
	
	//СегментMicro = Справочники.PLease_ТекстовыеЗначения.Micro;
	//Объект.RCT = ?(Объект.Сегментация = СегментMicro, "BAS1346", Объект.Контрагент.блКодRCT);
	
КонецПроцедуры

Процедура Формула_МаксСрокЛизинга(Объект) Экспорт

	МаксимальныйСрокЛизинга = 0;
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл 
		МаксимальныйСрокЛизинга = Макс(МаксимальныйСрокЛизинга, Строка.СрокЛизинга);
	КонецЦикла;	

	Объект.МаксимальныйСрокЛизинга = МаксимальныйСрокЛизинга;	
		
КонецПроцедуры

Процедура Формула_ПроцентнаяСтавка(Объект) Экспорт
	
	ПроцентнаяСтавка = 0;
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл
		Если Строка.ПроцентнаяСтавка = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПроцентнаяСтавка = ?(ПроцентнаяСтавка = 0, Строка.ПроцентнаяСтавка, Мин(ПроцентнаяСтавка, Строка.ПроцентнаяСтавка));
	КонецЦикла;	

	Объект.ПроцентнаяСтавка = ПроцентнаяСтавка;
	
КонецПроцедуры	

Процедура Формула_Маржа(Объект) Экспорт

	МинМаржа = 0;
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл
		Если Строка.СтавкаМаржи = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МинМаржа = ?(МинМаржа = 0, Строка.СтавкаМаржи, Мин(МинМаржа, Строка.СтавкаМаржи));
	КонецЦикла;	

	Объект.СтавкаМаржи = МинМаржа;
	
КонецПроцедуры

Процедура Формула_АгентскаяКомиссия(Объект) 

	МинКомиссия = 0;
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл
		Если Строка.АгентскаяКомиссия = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МинКомиссия = ?(МинКомиссия = 0, Строка.АгентскаяКомиссия, Мин(МинКомиссия, Строка.АгентскаяКомиссия));
	КонецЦикла;	

	Объект.АгентскаяКомиссия = МинКомиссия;
	
КонецПроцедуры

Процедура Формула_ТипПлатежа(Объект) 

	ТипПлатежа = Справочники.блНастройкаШаблоновПлатежногоРасписания.ПустаяСсылка();
	
	Если Объект.ФинансовыеУсловия.Количество() Тогда 
		МассивТиповПлатежей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Объект.ФинансовыеУсловия.ВыгрузитьКолонку("ТипПлатежа"));
		ТипПлатежа = ?(МассивТиповПлатежей.Количество() > 1, 
			Справочники.блНастройкаШаблоновПлатежногоРасписания.АннуитетныеПлатежи,
			МассивТиповПлатежей[0]);
	КонецЕсли;	

    Объект.ТипПлатежа = ТипПлатежа;
		
КонецПроцедуры

Процедура Формула_ВыкупнаяСтоимость(Объект) 

	ВыкупнаяСтоимость = 0;
	
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл 
		ВыкупнаяСтоимость = Макс(ВыкупнаяСтоимость, Строка.ВыкупнаяСтоимость);
	КонецЦикла;
	
    Объект.ВыкупнаяСтоимость = ВыкупнаяСтоимость;
		
КонецПроцедуры

Процедура Формула_НаименованиеАгента(Объект) 

	Структура = Новый Структура;
	Структура.Вставить("НаименованиеАгента", Справочники.Контрагенты.ПустаяСсылка());
	Структура.Вставить("АгентскаяКомиссия", 0);
	
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл 
		Если Структура.АгентскаяКомиссия < Строка.АгентскаяКомиссия Тогда 
			ЗаполнитьЗначенияСвойств(Структура, Строка);	
		КонецЕсли;	
	КонецЦикла;	
	
	ЗаполнитьЗначенияСвойств(Объект, Структура);
		
КонецПроцедуры

Процедура Формула_РазмерСубсидии(Объект) 

	РазмерСубсидии = 0;
	
	Для Каждого Строка Из Объект.ФинансовыеУсловия Цикл 
		РазмерСубсидии = Макс(РазмерСубсидии, Строка.РазмерСубсидии);
	КонецЦикла;
	
    Объект.РазмерСубсидии = РазмерСубсидии;
		
КонецПроцедуры

Процедура Формула_РешениеДейструетДо(Объект) Экспорт 
	
	Объект.РешениеДействуетДо = Дата(1,1,1,0,0,0);
	Если Не ЗначениеЗаполнено(Объект.DateOfDecision) Тогда 
		Возврат
	КонецЕсли;	
	
	Если Объект.СрокДействияРешения = 0 Тогда 
		Объект.РешениеДействуетДо = Объект.DateOfDecision;
		Возврат
	КонецЕсли;	
	
	Объект.РешениеДействуетДо = ДобавитьМесяц(Объект.DateOfDecision, Объект.СрокДействияРешения); 
	
КонецПроцедуры	

Процедура Формула_Решение(Объект) Экспорт
	
	ПоложительноеРешениеСВ = ПоложительноеРешениеСВЗ(Объект);
	
	ПрошелГодСДатыРегистрации = Объект.СрокСуществованияКомпанииЛет >= 1; 
	
	ПоложитПроверкаБезопасности = Истина;
	Если ПоложительноеРешениеСВ Тогда 
		Если Объект.ТребуетсяРешениеСБ И Не ПоложительноеРешениеСБ(Объект) Тогда 
			ПоложитПроверкаБезопасности = Ложь;
		КонецЕсли;
	КонецЕсли;	
	
	ПоложитПроверкаПоручителей = Истина;
	Для Каждого Строка Из Объект.ПоручителиФЛ Цикл  
		Если Не (Строка.СВЗ = Перечисления.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота 
			Или Строка.СВЗ = Перечисления.СостояниеСдачиОтчетности.РБЛ_ОтрицательныйСВозможностьюАрбитража) Тогда 
			ПоложитПроверкаПоручителей = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	U47 = 0; //TODO рассчитать когда будут известны решения по ЮЛ
	Т52 = 0; //TODO рассчитать когда будут известны решения по ЮЛ
	
	ПЛ_Про_10_20 = Справочники.блЛизинговыеПродукты.Про_10_20;
	
	Решение = "";
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда 
		Возврат
	КонецЕсли;
	
	Если Объект.РасшифровкаКредитныхПолномочий = 2 Тогда 
		Решение = НСтр("ru = 'Отказать в финансировании (запрашиваемая сумма превышает локальные полномочия РБЛ'");	
	ИначеЕсли Не ПоложительноеРешениеСВ Тогда 
		Решение = НСтр("ru = 'Отказать в финансировании (отсутствует необходимая проверка безопасности по клиенту)'");
	ИначеЕсли Не ПоложитПроверкаБезопасности Тогда 
		Решение = НСтр("ru = 'Отказать в финансировании (негативная проверка безопасности по клиенту)'");
	ИначеЕсли Не ПоложитПроверкаПоручителей Тогда 
		Решение = НСтр("ru = 'Отказать в финансировании (негативная проверка безопасности по поручителю - ФЛ)'");
	//ИначеЕсли U47 = 0 Тогда 	
	//	Решение = НСтр("ru = 'Отказать в финансировании (негативная проверка безопасности по поручителю - ЮЛ)'");
	//ИначеЕсли U47 = 1 И Т52 = 0 Тогда
	//	Решение = НСтр("ru = 'Отказать в финансировании (поручитель-ЮЛ не соответствует условиям продукта ПРО 10-20)'");
	ИначеЕсли Не ПрошелГодСДатыРегистрации Тогда 
		Решение = НСтр("ru = 'Отказать в финансировании (клиент зарегистрирован менее 1 года назад)'");
	ИначеЕсли Объект.ЛизинговыйПродукт = ПЛ_Про_10_20 Тогда
		Для Каждого СтрокаТЧ Из Объект.ПредметыЛизинга Цикл 
			Если СтрокаТЧ.МинимальныйПроцентАванса = 0 Тогда 
				Решение = НСтр("ru = 'Отказать в финансировании (не удовлетворяет требованиям к финансовому состоянию и/или условиям продукта ПРО 10-20)'");
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Решение) Тогда 
		Решение = НСтр("ru = 'Одобрить на условиях, указанных выше'");
	КонецЕсли;	
	
	Объект.Решение = Решение;
	
КонецПроцедуры	

Процедура Формула_СуммаКредитныхПолномочий(Объект) Экспорт 

	ПЛ_Про_10_20 	= Справочники.блЛизинговыеПродукты.Про_10_20;
	ПЛ_Скоринг_50	= Справочники.блЛизинговыеПродукты.Скоринг_50;
	
	Объект.СуммаКредитныхПолномочий = 0;
	//Если Объект.SWРейтинг = Перечисления.РБЛ_РейтингиSW.Значение_7Плюс Тогда 
		Объект.СуммаКредитныхПолномочий = ?(Объект.ЛизинговыйПродукт = ПЛ_Скоринг_50, 50000000, 
			?(Объект.ЛизинговыйПродукт = ПЛ_Про_10_20, 20000000, 10000000));
	//КонецЕсли;	
		
КонецПроцедуры

Процедура Формула_ИтогНеиспользованногоЛимита(Объект) Экспорт 
	
	Объект.ИтогНеиспользованногоЛимита = ИтоговаяСуммаЛимита(Объект, Объект.НеиспользованныйЛимит);
	
КонецПроцедуры

Процедура Формула_ИтогОстаткаОсновногоДолга(Объект) Экспорт

	Объект.ИтогОстаткаОсновногоДолга = ИтоговаяСуммаЛимита(Объект, Объект.ОстаткиОсновногоДолга);
	
КонецПроцедуры

Процедура Формула_КоличествоТрекеровПоВидуПредметаЛизинга(Объект, СтрокаТЧ, СтрокаТрекера) Экспорт

	ВидПЛ_CarsMinibuses = Справочники.блВидыПредметовЛизинга.ЛегковойАвтотранспорт;
	
	КолТрекеров = 0;
	Если СтрокаТЧ.КатегорияАктива = ВидПЛ_CarsMinibuses 
		И СтрокаТЧ.Цена >= 4000000 
		И СтрокаТЧ.МинимальныйПроцентАванса < 35
		И (Не Объект.ЭтоПовторныйКлиент 
		Или (Объект.ЭтоПовторныйКлиент И Объект.МаксКоличествоОплаченныхПлатежей < 3)) Тогда 
		
	    КолТрекеров = 2;
		
	Иначе
		
		КолТрекеров = ?(СтрокаТЧ.Цена > 0, 1, 0);
		
	КонецЕсли;	

	СтрокаТрекера.КолТрекеров = ?(КолТрекеров = 0, 
		"-", 
		СтрШаблон(НСтр("ru = '%1 трекер%2'"), КолТрекеров, ?(КолТрекеров = 2, "а", "")));
	
КонецПроцедуры

Процедура Формула_ИтогЛимитРиска(Объект) Экспорт 

	Объект.ЛимитРиска = Объект.ИтогНеиспользованногоЛимита + Объект.ИтогОстаткаОсновногоДолга + Объект.СуммаФинансированияСНДС;
	
КонецПроцедуры

Процедура Формула_МинАванс(Объект) Экспорт 

	ПЛ_Стандарт 	= Справочники.блЛизинговыеПродукты.Стандарт;
	ПЛ_Экспресс	 = Справочники.блЛизинговыеПродукты.Экспресс;
	
	Для Каждого СтрокаТЧ Из Объект.ПредметыЛизинга Цикл 	
		МинАванс = 0;
		Сдвиги = Новый Структура("СдвигПоСтрокам, СдвигПоСтолбцам", 0, 0);
		СтрокаТЧ.МинимальныйПроцентАванса = 0;
		
		Если Объект.ЛизинговыйПродукт = ПЛ_Экспресс Тогда 
			НачСтрока 	= 4;
			НачКолонка 	= 3;
			
			Сдвиги 	= ПолучитьСдвиги_Экспресс(Объект, СтрокаТЧ); 
			Макет 	= Документы.РБЛ_ЭлектронноеКредитноеРешение.ПолучитьМакет("Экспресс");
		ИначеЕсли Объект.ЛизинговыйПродукт = ПЛ_Стандарт Тогда
			НачСтрока 	= 4;
			НачКолонка 	= 5;
			
			Сдвиги 	= ПолучитьСдвиги_Стандарт(Объект, СтрокаТЧ);
			Макет 	= Документы.РБЛ_ЭлектронноеКредитноеРешение.ПолучитьМакет("Стандарт");
		КонецЕсли;	
		
		Если Не Сдвиги.СдвигПоСтрокам = 0 И Не Сдвиги.СдвигПоСтолбцам = 0 Тогда 
			Область = Макет.Область(НачСтрока + Сдвиги.СдвигПоСтрокам, НачКолонка + Сдвиги.СдвигПоСтолбцам);
			ТекущееЗначение = Область.Текст;
			
			Попытка
				МинАванс = Число(СокрЛП(СтрЗаменить(ТекущееЗначение, "%", "")));
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		СтрокаТЧ.МинимальныйПроцентАванса = Макс(МинАванс, СтрокаТЧ.ПовышенныйАванс);
	КонецЦикла;
	
КонецПроцедуры

Процедура Формула_СуммаФинансирования(Объект) Экспорт
	
	Валюта_RUB 	= Справочники.Валюты.RUB;
	ПЛ_Скоринг_50	= Справочники.блЛизинговыеПродукты.Скоринг_50;
	
	ЗапасЦеныНаАктив 		= 10;
	Если Объект.ПредметыЛизинга.Количество() И Объект.ЛизинговыйПродукт = ПЛ_Скоринг_50 Тогда 
		ЗапасЦеныНаАктив = ?(Валюта_RUB = Объект.ПредметыЛизинга[0].ВалютаПоставки, 0, 20);
	КонецЕсли;	
	
	СуммаЛимитаБезЗапаса 	= 0;
	СуммаЛимитаСЗапасом 	= 0;
	СуммаФинансированияСНДС = 0;
	СуммаФинансированияПодсказка = "";
	
	нСтроки = Объект.ПредметыЛизинга.НайтиСтроки(Новый Структура("МинимальныйПроцентАванса", 0));
	Если Не нСтроки.Количество() Тогда 
		
		Для Каждого Строка Из Объект.ПредметыЛизинга Цикл 
			Если Строка.МинимальныйПроцентАванса = 0 Тогда 
				СуммаФинансированияПодсказка = НСтр("ru = 'Не во всех строках заполнен мин. аванс.'");
				Прервать;
			КонецЕсли;	
			
			Если Строка.Цена = 0 Тогда 
				СуммаФинансированияПодсказка = НСтр("ru = 'Не во всех строках заполнена цена ПЛ.'");
				Прервать;
			КонецЕсли;	
			
			Если Не ЗначениеЗаполнено(Строка.КатегорияАктива) Тогда 
				СуммаФинансированияПодсказка = НСтр("ru = 'Не во всех строках заполнена категория актива'");
				Прервать;
			КонецЕсли;	
			
			Если Не ЗначениеЗаполнено(Объект.РешениеСВЗ) Тогда 
				СуммаФинансированияПодсказка = "Нет проверки СВЗ";
				Прервать;
			КонецЕсли;	
			
			Если Не Объект.РешениеСВЗ = Перечисления.СостояниеСдачиОтчетности.ОтрицательныйРезультатДокументооборота Тогда 
				Если Объект.ТребуетсяРешениеСБ И Не ЗначениеЗаполнено(Объект.РешениеСБ) Тогда 
					СуммаФинансированияПодсказка = "Нет проверки СБ";
					Прервать;
				КонецЕсли;	
			КонецЕсли;	
			
			СуммаФинансированияСНДС = СуммаФинансированияСНДС + Строка.Сумма * (1 - Строка.МинимальныйПроцентАванса / 100);
		КонецЦикла;	
		
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(СуммаФинансированияПодсказка) Тогда 
		
		Для Каждого Строка Из Объект.ПредметыЛизинга Цикл			
			СуммаБезЗапаса = Строка.Сумма * (1 - Строка.МинимальныйПроцентАванса / 100);
			
			СуммаСЗапасом = 0;
			Если Объект.ЛизинговыйПродукт = ПЛ_Скоринг_50 И Не Строка.ВалютаПоставки = Валюта_RUB Тогда
				СуммаСЗапасом = СуммаБезЗапаса * (1 + ЗапасЦеныНаАктив / 100);
			КонецЕсли;
				
			СуммаЛимитаБезЗапаса = СуммаЛимитаБезЗапаса + СуммаБезЗапаса;
			СуммаЛимитаСЗапасом  = СуммаЛимитаСЗапасом + СуммаСЗапасом;
		КонецЦикла;	
		
		СуммаЛимитаСЗапасом = СуммаЛимитаСЗапасом + Объект.ИтогНеиспользованногоЛимита + Объект.ИтогОстаткаОсновногоДолга; 
		СуммаЛимитаБезЗапаса = СуммаЛимитаБезЗапаса + Объект.ИтогНеиспользованногоЛимита + Объект.ИтогОстаткаОсновногоДолга; 
		
		Если Объект.СуммаКредитныхПолномочий >= СуммаЛимитаСЗапасом Тогда 
			СуммаФинансированияСНДС = СуммаФинансированияСНДС * (1 + ЗапасЦеныНаАктив / 100);
		ИначеЕсли Объект.СуммаКредитныхПолномочий >= СуммаЛимитаБезЗапаса И СуммаЛимитаБезЗапаса > 0 Тогда 
			СуммаФинансированияСНДС = СуммаФинансированияСНДС * (Объект.СуммаКредитныхПолномочий / СуммаЛимитаБезЗапаса);
		КонецЕсли;
	КонецЕсли;	
	
	Объект.СуммаФинансированияПодсказка = СуммаФинансированияПодсказка;
	Объект.СуммаФинансированияСНДС 		=  ?(ЗначениеЗаполнено(СуммаФинансированияПодсказка), 0, СуммаФинансированияСНДС);
		
КонецПроцедуры

Процедура Формула_РасшифровкаКредитныхПолномочий(Объект) Экспорт 
	
	Объект.РасшифровкаКредитныхПолномочий = "";
	Если ЗначениеЗаполнено(Объект.СуммаКредитныхПолномочий) Тогда 
		Объект.РасшифровкаКредитныхПолномочий = ?(Объект.СуммаКредитныхПолномочий >= Объект.ЛимитРиска, 1, 2);
	КонецЕсли;	
	
КонецПроцедуры

// SCORE CALC

&НаСервере
Процедура Формула_ЦенаПЛ(Объект) Экспорт

	Объект.ЦенаПЛ = Объект.ПредметыЛизинга.Итог("Сумма") / 1000; 	

КонецПроцедуры	

Процедура Формула_ЕжемесячныйПлатеж(Объект) Экспорт
	
	ЕжемесячныйПлатеж = 0;
	
	Если Не Объект.МаксимальныйСрокЛизинга = 0 Тогда  
		ЕжемесячныйПлатеж = (Объект.ЦенаПЛ * 0.8) * Pow(1 + Объект.ПроцентнаяСтавка / 100, Объект.МаксимальныйСрокЛизинга / 12) / Объект.МаксимальныйСрокЛизинга;  
	КонецЕсли;	
	
	Объект.ЕжемесячныйПлатеж = ЕжемесячныйПлатеж;
	
КонецПроцедуры

Процедура Формула_СрокСущКомпании(Объект) Экспорт 

	СрокСуществованияКомпанииЛет = 0;
	
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) 
		И ЗначениеЗаполнено(Объект.DateOfDecision) 
		И Объект.DateOfDecision >= Объект.ДатаРегистрации Тогда
		
		СрокСуществованияКомпанииЛет = Цел((НачалоДня(Объект.DateOfDecision) - НачалоДня(Объект.ДатаРегистрации)) / 86400 / 365);
		          
	КонецЕсли;	

	Объект.СрокСуществованияКомпанииЛет = СрокСуществованияКомпанииЛет;
	
КонецПроцедуры

Процедура Формула_ПоказательСоотношенияПрибылиКСумме(Объект) Экспорт 
	Формула_ПоказательСоотношенияПрибылиИлиВыручкиКСумме(Объект, Объект.Показатели[0], Объект.KRUB[5]);
КонецПроцедуры	

Процедура Формула_ПоказательСоотношенияВыручкиКСумме(Объект) Экспорт
	Формула_ПоказательСоотношенияПрибылиИлиВыручкиКСумме(Объект, Объект.Показатели[1], Объект.KRUB[4]);
КонецПроцедуры

Процедура Формула_ПоказательСоотношенияПрибылиИлиВыручкиКСумме(Объект, СтрокаТЧ, СтрокаKRUB)
	
	СуммаKRUB = 0;
	ПолучитьСуммуKRUB(Объект.НеиспользованныйЛимит, СуммаKRUB, "ТипЛимита", Объект.Дата);
	ПолучитьСуммуKRUB(Объект.ОстаткиОсновногоДолга, СуммаKRUB, "ТипЗадолженности", Объект.Дата);
	
	Дел = Объект.ЕжемесячныйПлатеж * 12 + СуммаKRUB;
	Если Не Дел = 0  Тогда 
		СтрокаТЧ.ЗначениеПоказателя = СтрокаKRUB.ЗначениеТекГод / Дел;
	КонецЕсли;	
	
	Формула_ПоказательScore(СтрокаТЧ);
	
КонецПроцедуры	

Процедура Формула_ПоказательСоотношенияКапитала(Объект) 
	Формула_ПоказательСоотношенияКапиталаИАктивов(Объект, Объект.Показатели[2], 1);
КонецПроцедуры

Процедура Формула_ПоказательСоотношенияАктивов(Объект)
	Формула_ПоказательСоотношенияКапиталаИАктивов(Объект, Объект.Показатели[3], 0);
КонецПроцедуры

Процедура Формула_ПоказательСоотношенияКапиталаИАктивов(Объект, СтрокаТЧ, Индекс)
	
	СтрокаТЧ.ЗначениеПоказателя = 0;
	
	Если Не Объект.ЦенаПЛ = 0 Тогда 
		СтрокаТЧ.ЗначениеПоказателя = Объект.KRUB[Индекс].ЗначениеТекГод / Объект.ЦенаПЛ;  
	КонецЕсли;	
		
	Формула_ПоказательScore(СтрокаТЧ);
	
КонецПроцедуры

Процедура Формула_ПоказательЗаемныеСредства(Объект)
	
	СтрокаТЧ = Объект.Показатели[4];
	
	СтрокаТЧ.ЗначениеПоказателя = 0;
	
	Если Не Объект.KRUB[5].ЗначениеТекГод = 0 Тогда 
		СтрокаТЧ.ЗначениеПоказателя = (Объект.KRUB[2].ЗначениеТекГод + Объект.KRUB[3].ЗначениеТекГод) / Объект.KRUB[5].ЗначениеТекГод;  
	КонецЕсли;	
	
	СтрокаТЧ.Score = 0;
	Если Объект.KRUB[5].ЗначениеТекГод > 0 Тогда
		СтрокаТЧ.Score = 0;
		Weight = Число(СтрЗаменить(СтрокаТЧ.Weight, "%", ""));
		
		Если СтрокаТЧ.ЗначениеПоказателя >= 0 
			И СтрокаТЧ.ЗначениеПоказателя <= СтрокаТЧ.МинЗначение Тогда 
			СтрокаТЧ.Score = 10 * Weight / 100;
		ИначеЕсли СтрокаТЧ.ЗначениеПоказателя <= СтрокаТЧ.МаксЗначение 
			И СтрокаТЧ.ЗначениеПоказателя >  СтрокаТЧ.МинЗначение Тогда	
			СтрокаТЧ.Score = 5 * Weight / 100;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура Формула_ПоказательУровеньКапитала(Объект)
	
	СтрокаТЧ = Объект.Показатели[5];
	
	СтрокаТЧ.ЗначениеПоказателя = 0;
	
	Если Не Объект.KRUB[0].ЗначениеТекГод = 0 Тогда 
		СтрокаТЧ.ЗначениеПоказателя = Объект.KRUB[1].ЗначениеТекГод  / Объект.KRUB[0].ЗначениеТекГод;  
	КонецЕсли;	
		
	Формула_ПоказательScore(СтрокаТЧ);
	
КонецПроцедуры

Процедура Формула_ПоказательВыручки(Объект)
	
	СтрокаТЧ = Объект.Показатели[6];
	
	СтрокаТЧ.ЗначениеПоказателя = 0;
	
	Если Не Объект.KRUB[4].ЗначениеПредГод = 0 Тогда 
		СтрокаТЧ.ЗначениеПоказателя = Объект.KRUB[4].ЗначениеТекГод  / Объект.KRUB[4].ЗначениеПредГод;  
	КонецЕсли;	
	
	Формула_ПоказательScore(СтрокаТЧ)
	
КонецПроцедуры

Процедура Формула_ПоказательСрокДеятельности(Объект) Экспорт 
	
	СтрокаТЧ = Объект.Показатели[7];
	
	СтрокаТЧ.ЗначениеПоказателя = Объект.СрокСуществованияКомпанииЛет;
	
	Формула_ПоказательScore(СтрокаТЧ);
	
КонецПроцедуры

Процедура Формула_ПоказательScore(СтрокаТЧ)

	СтрокаТЧ.Score = 0;
	Weight = Число(СтрЗаменить(СтрокаТЧ.Weight, "%", ""));
	
	Если СтрокаТЧ.ЗначениеПоказателя >= СтрокаТЧ.МаксЗначение Тогда 
		СтрокаТЧ.Score = 10 * Weight / 100;			
	КонецЕсли;	
	
	Если СтрокаТЧ.ЗначениеПоказателя >= СтрокаТЧ.МинЗначение 
		И СтрокаТЧ.ЗначениеПоказателя < СтрокаТЧ.МаксЗначение Тогда 
		СтрокаТЧ.Score = 5 * Weight / 100;  
	КонецЕсли;

КонецПроцедуры

Процедура Формула_ИтоговыйСкоринговыйБалл(Объект)
	
	Объект.ИтоговыйСкоринговыйБалл = 0;
	
	Если Объект.KRUB[1].ЗначениеТекГод > 0 Тогда  
		Объект.ИтоговыйСкоринговыйБалл = Объект.Показатели.Итог("Score");
	КонецЕсли;

КонецПроцедуры	

Процедура Формула_ПроцентПоручительства(Объект) Экспорт
		
	Объект.ПроцентПоручительства = Объект.ПоручителиФЛ.Итог("ДоляВУК") >= 50;
		
КонецПроцедуры

Процедура Формула_МинимальныйАвансПоСкорингу(Объект) Экспорт

	ПравоеЗначение = ?(Объект.ИтоговыйСкоринговыйБалл < 5, 25, ?(Объект.ИтоговыйСкоринговыйБалл > 7, 15, 20));
	ЛевоеЗначение = ?(Объект.ПроцентПоручительства = Истина, 5, 0); 
	
	Объект.МинимальныйАвансПоСкорингу = Макс(ПравоеЗначение - ЛевоеЗначение, 15);

КонецПроцедуры
